{
  "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_taskID",
          "type": "bytes32"
        },
        {
          "internalType": "address payable",
          "name": "_client",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_provider",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_providerCollateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_clientVerification",
          "type": "bytes32"
        },
        {
          "internalType": "contract Registry",
          "name": "_registry",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "taskID",
          "type": "bytes32"
        }
      ],
      "name": "PaymentCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "taskID",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "payment",
          "type": "uint256"
        }
      ],
      "name": "PaymentPending",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "taskID",
          "type": "bytes32"
        }
      ],
      "name": "TaskActivated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "taskID",
          "type": "bytes32"
        }
      ],
      "name": "TaskCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "taskID",
          "type": "bytes32"
        }
      ],
      "name": "TaskCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "task",
          "type": "address"
        }
      ],
      "name": "TaskCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "taskID",
          "type": "bytes32"
        }
      ],
      "name": "TaskInvalidated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "Address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "Amount",
          "type": "uint256"
        }
      ],
      "name": "TransferMade",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "CorrectVerification",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "InTime",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ProviderTime",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "activateTask",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelTask",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "completePayment",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "completeTask",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActivationTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPayment",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPaymentState",
      "outputs": [
        {
          "internalType": "enum Task.PaymentState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProviderCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTaskState",
      "outputs": [
        {
          "internalType": "enum Task.TaskState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "invalidateTask",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "ver",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_timeReceivedProvider",
          "type": "uint256"
        }
      ],
      "name": "receiveResults",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_code",
          "type": "string"
        }
      ],
      "name": "setCode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x33f0aa1da224089a3517bc2da9b43ef22f4ef07fb4be92b3af5e2bb95b561a37",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
    "transactionIndex": 0,
    "gasUsed": "2281727",
    "logsBloom": "0x00000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000040200200000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000",
    "blockHash": "0xb26c2bdd010fc6b5a61eadbfcc3f5d7279b9db7204174b934de59a30934e71f6",
    "transactionHash": "0x33f0aa1da224089a3517bc2da9b43ef22f4ef07fb4be92b3af5e2bb95b561a37",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 3,
        "transactionHash": "0x33f0aa1da224089a3517bc2da9b43ef22f4ef07fb4be92b3af5e2bb95b561a37",
        "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
        "topics": [
          "0xa41a78ade5fbc4b89e34ab7d276eb9545a2e4878e8f8fd161c9b28f9638bd5d8"
        ],
        "data": "0x0000000000000000000000009fe46736679d2d9a65f0992f2272de9f3c7fa6e0",
        "logIndex": 0,
        "blockHash": "0xb26c2bdd010fc6b5a61eadbfcc3f5d7279b9db7204174b934de59a30934e71f6"
      }
    ],
    "blockNumber": 3,
    "cumulativeGasUsed": "2281727",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xaaa50a27c0f701987ca97fd3f4d930ee0ab2c93fcf107f356f26f9f83fc6f4ff",
    "0x70997970C51812dc3A010C7d01b50e0d17dc79C8",
    "0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC",
    30,
    "500",
    600,
    "0xf2350a27c0f701987ca97fd3f4d930ee0ab2c93fcf107f356f26f9f83fc6f4da",
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "a694b8c5d9c5c974b969a1be311a0561",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_taskID\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"_client\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_provider\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_providerCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_clientVerification\",\"type\":\"bytes32\"},{\"internalType\":\"contract Registry\",\"name\":\"_registry\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"taskID\",\"type\":\"bytes32\"}],\"name\":\"PaymentCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"taskID\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"}],\"name\":\"PaymentPending\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"taskID\",\"type\":\"bytes32\"}],\"name\":\"TaskActivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"taskID\",\"type\":\"bytes32\"}],\"name\":\"TaskCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"taskID\",\"type\":\"bytes32\"}],\"name\":\"TaskCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"task\",\"type\":\"address\"}],\"name\":\"TaskCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"taskID\",\"type\":\"bytes32\"}],\"name\":\"TaskInvalidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"Address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Amount\",\"type\":\"uint256\"}],\"name\":\"TransferMade\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"CorrectVerification\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"InTime\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ProviderTime\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activateTask\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelTask\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"completePayment\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"completeTask\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActivationTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPayment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPaymentState\",\"outputs\":[{\"internalType\":\"enum Task.PaymentState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProviderCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTaskState\",\"outputs\":[{\"internalType\":\"enum Task.TaskState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"invalidateTask\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"ver\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_timeReceivedProvider\",\"type\":\"uint256\"}],\"name\":\"receiveResults\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_code\",\"type\":\"string\"}],\"name\":\"setCode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"invalidateTask()\":{\"notice\":\"TaskState -> Invalid\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Task.sol\":\"Task\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Registry.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity >=0.7.0 <0.9.0;\\n\\ncontract Registry {\\n\\n    address private immutable owner; \\n\\n    struct providerRating {\\n        uint upVotes;\\n        uint downVotes;\\n    }\\n\\n    mapping(address => providerRating) private performance;\\n    mapping (bytes32 => bool) private registeredTask;    // it could also be only task address => bool\\n\\n    event ProviderUpvoted(address provider, address task);\\n    event ProviderDownvoted(address provider, address task);\\n    event TaskRegistered(address task);\\n    event TaskUnregistered(address task);\\n\\n    modifier ownerOnly() {\\n        require(\\n            msg.sender == owner,\\n            \\\"Method can be called only by owner.\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier registeredTaskOnly() {\\n        require(\\n            isRegistered(),\\n            \\\"Task must be registered\\\"\\n        );\\n        _;\\n    }\\n\\n    constructor() {\\n        owner = msg.sender;\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return owner;\\n    }\\n\\n    function registerTask(address task) ownerOnly public {\\n      bytes32 hash = keccak256(abi.encodePacked(task));\\n      registeredTask[hash] = true;\\n      emit TaskRegistered(task);\\n    }\\n\\n    function unregisterTask() registeredTaskOnly() public {\\n        bytes32 hash = keccak256(abi.encodePacked(msg.sender));\\n        delete registeredTask[hash];\\n        emit TaskUnregistered(msg.sender);\\n    }\\n\\n    function isRegistered() public view returns (bool) {\\n        bytes32 hash = keccak256(abi.encodePacked(msg.sender));\\n        return registeredTask[hash];\\n    }\\n\\n    function upVote(address provider) registeredTaskOnly public { \\n    // function upVote(address provider) external {\\n        performance[provider].upVotes += 1;\\n        // performance[provider].upVotes += 10; //for tests\\n        emit ProviderUpvoted(provider,msg.sender);\\n    }\\n\\n    function downVote(address provider) registeredTaskOnly external {\\n    // function downVote(address provider) external {\\n        performance[provider].downVotes += 1;\\n        // performance[provider].downVotes += 10; //for tests\\n        emit ProviderDownvoted(provider,msg.sender);\\n    }\\n\\n    function getPerformance(address provider) public view returns (providerRating memory) {\\n        return performance[provider];\\n        // tuple: upVotes, downVotes\\n    }\\n\\n    // could be calculated in the app\\n    // function getScore(address provider) public view returns (uint) {\\n    //    return confidence(performance[provider].upVotes,performance[provider].downVotes);\\n    // }\\n\\n    // function confidence(uint ups, uint downs) private pure returns (uint) {\\n    //     if (ups + downs == 0) \\n    //         return 0;\\n\\n    //     //precision is 3 decimal digits\\n    //     uint n = ups + downs;\\n\\n    //     uint z = 1960;  //z-score for 95% two-sided confidence = 1.96\\n    //     // uint z = 1645;  //z-score for 90% two-sided confidence = 1.645\\n    //     // uint z = 1440; //-score for 85% two-sided confidence = 1.44\\n    //     // uint z = 1282; //z-score for 80% two sided confidence = 1.282\\n        \\n    //     uint p = divider(ups,n,3);\\n    //     uint left = p + divider(1,2*n,3)*z*z/1000000; \\n    //     uint right = z * sqrt(divider(p*(1000-p),n,0) + divider(z*z,4*n*n,0))/1000; \\n    //     uint denominator = 1000 + divider(1,n,3)*z*z/1000000;\\n\\n    //     return divider(left-right, denominator, 3);\\n    // }\\n    \\n    // function divider(uint numerator, uint denominator, uint precision) private pure returns(uint) {\\n    //     return numerator*(uint(10)**uint(precision))/denominator;\\n    // }\\n\\n    // //babylonian method\\n    // function sqrt(uint x) private pure returns (uint) {\\n    //     uint z = divider(x+1,2,0); \\n    //     uint y = x;\\n    //     uint temp;\\n    //     while (z < y) {\\n    //         y = z;\\n    //         temp = divider(x,z,0);\\n    //         z = divider(temp+z,2,0);\\n    //     }\\n    //     return uint(y);\\n    // }\\n\\n\\n    // Fallback Function\\n    fallback() external payable{\\n        revert();\\n    }\\n\\n    receive() external payable {\\n        revert(\\\"bad call\\\");\\n    }\\n}\",\"keccak256\":\"0x237ceb6ed399531937713a71f5aae720822473a2168b9f8eb8ce612559c5513f\",\"license\":\"GPL-3.0\"},\"contracts/Task.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity >=0.7.0 <0.9.0;\\n\\nimport \\\"./Registry.sol\\\";\\n\\ncontract Task {\\n\\n    enum TaskState {\\n        Created,\\n        Cancelled,\\n        Active,\\n        Completed,\\n        Invalid\\n    }\\n\\n    enum PaymentState {\\n        Initialized,\\n        Pending,\\n        Completed\\n    }\\n\\n    address payable private immutable provider;\\n    address payable private immutable client;\\n    bytes32 private immutable taskID; //by auction contract  \\n\\n    Registry private registry; //to be deleted later\\n    // Registry private immutable registry = <address>\\n    \\n    uint private immutable price;   //can be float at front-end, payment per sec of execution\\n    uint private providerCollateral;   //can be float at front-end\\n    uint private clientCollateral;\\n    uint private payment;\\n    uint private deadline;\\n    uint private duration;  //contract duration, in sec\\n    \\n    uint private activationTime;   //contract activation date, in sec since epoch\\n    uint private timeResultProvided;     //time of result given by provider, in sec since epoch\\n    uint private timeResultReceived;    //time of received result, in sec since epoch   \\n\\n    TaskState private taskState;   //taskState of contract\\n    PaymentState private paymentState;\\n\\n    string code;   //string for ipfs address \\n\\n    bytes32 private immutable clientVerification;\\n    string private providerVerification;\\n\\n\\n    //Events \\n    //taskID to be deleted\\n    event TaskCreated(address task);\\n    event TaskActivated(bytes32 taskID);\\n    event TaskCompleted(bytes32 taskID);\\n    event TaskCancelled(bytes32 taskID);\\n    event TaskInvalidated(bytes32 taskID);\\n    event PaymentPending(bytes32 taskID, uint payment);\\n    event PaymentCompleted(bytes32 taskID);\\n    event TransferMade(address Address, uint Amount);\\n\\n    //Modifiers \\n    modifier clientOnly() {\\n        require(\\n            msg.sender == client,\\n            \\\"Method can be called only by client.\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier providerOnly() {\\n        require(\\n            msg.sender == provider,\\n            \\\"Method can be called only by provider.\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier inTaskState(TaskState _taskState) {\\n        require(\\n            taskState == _taskState,\\n            \\\"Invalid TaskState.\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier inPaymentState(PaymentState _paymentState) {\\n        require(\\n            paymentState == _paymentState,\\n            \\\"Invalid PaymentState.\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier requiresBalance(uint amount) {\\n        require(\\n            address(this).balance >= amount,\\n            \\\"Not enough balance\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier requiresValue(uint amount) {\\n        require(\\n            msg.value == amount,\\n            \\\"Value sent is not the expected\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier registeredTaskOnly() {\\n        require(\\n            registry.isRegistered(),\\n            \\\"Task must be registered\\\"\\n        );\\n        _;\\n    }\\n\\n\\n    //Constructor ,TasksRegistry will be deleted\\n    constructor(\\n        bytes32 _taskID,\\n        address payable _client,\\n        address payable _provider,\\n        uint _price,\\n        uint _providerCollateral,\\n        uint _deadline,\\n        bytes32  _clientVerification,\\n        Registry _registry \\n    )\\n    payable\\n    {\\n        taskID = _taskID;\\n        client = _client;\\n        provider = _provider;\\n        price = _price;\\n        clientCollateral = msg.value;\\n        providerCollateral = _providerCollateral;\\n        deadline = _deadline; \\n        clientVerification = _clientVerification;\\n        taskState = TaskState.Created;\\n        paymentState = PaymentState.Initialized; \\n        registry = _registry;\\n        emit TaskCreated(address(this));\\n    }\\n\\n    // TaskState functions to be called by smart contract or client/provider? \\n\\n    //Cancel\\n    //TaskState -> Cancel\\n    //refunds payment to client\\n    //can be called only by client and only if contract hasnt been activated by provider\\n\\n    // - no requiresClient so that it can be tested\\n    function cancelTask() public clientOnly inTaskState(TaskState.Created) requiresBalance(clientCollateral)\\n    // function cancelTask() public inTaskState(TaskState.Created) requiresBalance(clientCollateral)\\n    {\\n        taskState = TaskState.Cancelled;\\n \\n        client.transfer(clientCollateral);\\n        emit TransferMade(client,clientCollateral);\\n        registry.unregisterTask();\\n        emit TaskCancelled(taskID);\\n    }\\n\\n    //Invalidate\\n    ///TaskState -> Invalid\\n    //can be called only by client and only if contract is activated  \\n    //if time has passed and the task is not comleted by the provider\\n    //transfers payment and collateral to client\\n    \\n    // - no requiresClient so that it can be tested\\n    function invalidateTask() public  clientOnly inTaskState(TaskState.Active) requiresBalance(clientCollateral + providerCollateral)\\n    // function invalidateTask() public inTaskState(TaskState.Active) requiresBalance(clientCollateral + providerCollateral) \\n    {\\n        require(\\n            (block.timestamp >  activationTime + deadline),\\n            \\\"Time has not expired.\\\"\\n        );\\n        taskState = TaskState.Invalid;\\n  \\n        client.transfer(clientCollateral + providerCollateral);\\n        emit TransferMade(client, clientCollateral + providerCollateral);\\n        registry.unregisterTask();\\n        emit TaskInvalidated(taskID);\\n    }\\n\\n    // Activate\\n    // TaskState -> Activated\\n    // can be called only by provider to start the process\\n\\n    // - no requiresProvider so that it can be tested\\n    function activateTask() public payable providerOnly requiresValue(providerCollateral) inTaskState(TaskState.Created) requiresBalance(clientCollateral + providerCollateral) registeredTaskOnly\\n    // function activateTask() public payable requiresValue(providerCollateral) inTaskState(TaskState.Created) requiresBalance(clientCollateral + providerCollateral) registeredTaskOnly\\n    {\\n        activationTime = block.timestamp;\\n        taskState = TaskState.Active;\\n        emit TaskActivated(taskID);\\n    }\\n\\n\\n    // Complete\\n    // TaskState -> Completed\\n    // can be called only by provider when the computation is over\\n\\n    // - no requiresProvider so that it can be tested\\n    function completeTask() public providerOnly inTaskState(TaskState.Active) requiresBalance(clientCollateral + providerCollateral)\\n    // function completeTask() public inTaskState(TaskState.Active) requiresBalance(clientCollateral + providerCollateral)\\n    {\\n        // payable(msg.sender).transfer(address(this).balance);\\n        if (InTime() && ProviderTime() && CorrectVerification()){\\n            duration = timeResultProvided - activationTime;\\n            payment = price * duration;\\n            if (payment <= clientCollateral) {\\n                provider.transfer(payment+providerCollateral);\\n                emit TransferMade(provider, payment+providerCollateral);\\n                client.transfer(payment-clientCollateral);\\n                emit TransferMade(client, payment-clientCollateral);\\n                paymentState = PaymentState.Completed;\\n                emit PaymentCompleted(taskID);\\n                //send result of computation\\n                \\n            }\\n            else {\\n                provider.transfer(clientCollateral+providerCollateral);\\n                emit TransferMade(provider, clientCollateral+providerCollateral);\\n                paymentState = PaymentState.Pending;\\n                emit PaymentPending(taskID,payment-clientCollateral);\\n            }\\n            registry.upVote(provider);\\n        }\\n        else {\\n            client.transfer(clientCollateral + providerCollateral);\\n            emit TransferMade(client, clientCollateral + providerCollateral);\\n            registry.downVote(provider);\\n        }\\n        taskState = TaskState.Completed;\\n        registry.unregisterTask();\\n        emit TaskCompleted(taskID);\\n    }\\n\\n    function completePayment() public payable clientOnly inTaskState(TaskState.Completed) inPaymentState(PaymentState.Pending) requiresValue(payment-clientCollateral) {\\n    // function completePayment() public payable inTaskState(TaskState.Completed) requiresValue(payment - clientCollateral) {\\n        require (paymentState == PaymentState.Pending, \\\"Payment not needed\\\");\\n        provider.transfer(msg.value);\\n        emit TransferMade(provider, payment-clientCollateral); \\n        paymentState = PaymentState.Completed;\\n        emit PaymentCompleted(taskID);\\n        //send or emit result of computation\\n    }\\n    \\n    //Setters\\n    //to be inside completeTask\\n    function receiveResults(string memory ver, uint _timeReceivedProvider) public {\\n        providerVerification = ver;   \\n        timeResultReceived = block.timestamp;\\n        timeResultProvided = _timeReceivedProvider;\\n    }\\n\\n    //code to be in constructor\\n    function setCode(string memory _code) public{\\n        code = _code;\\n    }\\n\\n    //Getters - to be deleted\\n    function getActivationTime() public view returns (uint)\\n    {\\n        return activationTime;\\n    }\\n\\n    // function getCode() public view returns (string memory){\\n    //     return code;\\n    // }\\n\\n    // TaskState: Created->0, Cancelled->1, Active->2, Completed->3, Invalid->4\\n    function getTaskState() public view returns (TaskState)\\n    {\\n        return taskState;\\n    }\\n\\n    // PaymentState: Initiliazed->0, Pending->1, Completed->2\\n    function getPaymentState() public view returns (PaymentState)\\n    {\\n        return paymentState;\\n    }\\n\\n    function getPayment() public view returns (uint)\\n    {\\n        return payment;\\n    }\\n\\n    function getProviderCollateral() public view returns (uint)\\n    {\\n        return providerCollateral;\\n    }\\n\\n    //Functions -> Private/internal\\n    function InTime() public view returns (bool){\\n        return (timeResultReceived <= activationTime + deadline);  //first argument may be deleted\\n    }\\n\\n    function ProviderTime() public view returns (bool) {\\n        return (timeResultReceived <= timeResultProvided + 60); //gives 60 sec to provider to send the results\\n    }\\n\\n    function CorrectVerification() public view returns (bool){\\n        return (clientVerification == keccak256(abi.encodePacked(providerVerification)));\\n    }\\n\\n    // Fallback Function\\n    fallback() external payable{\\n        revert();\\n    }\\n\\n    receive() external payable {\\n        revert(\\\"bad call\\\");\\n    }\\n\\n}\\n\",\"keccak256\":\"0x66d4ed8557cdf2b051806f71965f02dd892e6011a2db287ba41aaa6296bdb753\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x61012060405260405162002bfb38038062002bfb83398181016040528101906200002a9190620002ce565b8760c081815250508673ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508573ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508460e081815250503460028190555083600181905550826004819055508161010081815250506000600960006101000a81548160ff02191690836004811115620000ef57620000ee62000397565b5b02179055506000600960016101000a81548160ff021916908360028111156200011d576200011c62000397565b5b0217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fa41a78ade5fbc4b89e34ab7d276eb9545a2e4878e8f8fd161c9b28f9638bd5d830604051620001939190620003eb565b60405180910390a1505050505050505062000408565b600080fd5b6000819050919050565b620001c381620001ae565b8114620001cf57600080fd5b50565b600081519050620001e381620001b8565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200021682620001e9565b9050919050565b620002288162000209565b81146200023457600080fd5b50565b60008151905062000248816200021d565b92915050565b6000819050919050565b62000263816200024e565b81146200026f57600080fd5b50565b600081519050620002838162000258565b92915050565b6000620002968262000209565b9050919050565b620002a88162000289565b8114620002b457600080fd5b50565b600081519050620002c8816200029d565b92915050565b600080600080600080600080610100898b031215620002f257620002f1620001a9565b5b6000620003028b828c01620001d2565b9850506020620003158b828c0162000237565b9750506040620003288b828c0162000237565b96505060606200033b8b828c0162000272565b95505060806200034e8b828c0162000272565b94505060a0620003618b828c0162000272565b93505060c0620003748b828c01620001d2565b92505060e0620003878b828c01620002b7565b9150509295985092959890939650565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000620003d382620001e9565b9050919050565b620003e581620003c6565b82525050565b6000602082019050620004026000830184620003da565b92915050565b60805160601c60a05160601c60c05160e051610100516126f96200050260003960006103a0015260006105650152600081816107a90152818161090e01528181610c5c01528181610f630152818161130c015281816117100152611a2601526000818161067f0152818161071601528181610a0601528181610a9d01528181610fb90152818161118d01528181611224015281816113b10152818161174b015281816118c1015261194b0152600081816103c7015281816105a101528181610638015281816107e40152818161087b0152818161099201528181610b2001528181610c96015281816115f5015261167d01526126f96000f3fe6080604052600436106100ec5760003560e01c806371563d101161008a578063da632a1111610059578063da632a11146102bf578063e403f1a7146102ea578063e8fda67714610313578063f7d9ae731461031d5761012c565b806371563d101461021357806392df4b701461023e578063adaa139914610269578063bb328a7d146102945761012c565b806343bb8db5116100c657806343bb8db5146101b05780635a90bbfc146101c757806363d22bb3146101d15780636c77d7ef146101fc5761012c565b8063042e58c8146101315780630b42330c1461015a5780631798b0f3146101855761012c565b3661012c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012390611b5e565b60405180910390fd5b600080fd5b34801561013d57600080fd5b5061015860048036038101906101539190611d0e565b610334565b005b34801561016657600080fd5b5061016f61035d565b60405161017c9190611de1565b60405180910390f35b34801561019157600080fd5b5061019a610374565b6040516101a79190611e17565b60405180910390f35b3480156101bc57600080fd5b506101c56103c5565b005b6101cf610c94565b005b3480156101dd57600080fd5b506101e6610f9c565b6040516101f39190611e17565b60405180910390f35b34801561020857600080fd5b50610211610fb7565b005b34801561021f57600080fd5b50610228611344565b6040516102359190611e17565b60405180910390f35b34801561024a57600080fd5b50610253611360565b6040516102609190611e41565b60405180910390f35b34801561027557600080fd5b5061027e61136a565b60405161028b9190611e41565b60405180910390f35b3480156102a057600080fd5b506102a9611374565b6040516102b69190611e41565b60405180910390f35b3480156102cb57600080fd5b506102d461137e565b6040516102e19190611ea4565b60405180910390f35b3480156102f657600080fd5b50610311600480360381019061030c9190611ebf565b611395565b005b61031b6113af565b005b34801561032957600080fd5b50610332611749565b005b81600b908051906020019061034a929190611a5e565b5042600881905550806007819055505050565b6000600960009054906101000a900460ff16905090565b6000600b6040516020016103889190612008565b604051602081830303815290604052805190602001207f000000000000000000000000000000000000000000000000000000000000000014905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610453576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044a90612091565b60405180910390fd5b600280600481111561046857610467611d6a565b5b600960009054906101000a900460ff16600481111561048a57610489611d6a565b5b146104ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c1906120fd565b60405180910390fd5b6001546002546104da919061214c565b8047101561051d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610514906121ee565b60405180910390fd5b610525611344565b80156105355750610534610f9c565b5b80156105455750610544610374565b5b15610a045760065460075461055a919061220e565b6005819055506005547f000000000000000000000000000000000000000000000000000000000000000061058e9190612242565b600381905550600254600354116107e2577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc6001546003546105e9919061214c565b9081150290604051600060405180830381858888f19350505050158015610614573d6000803e3d6000fd5b507fbb1d109694da1f57c795e648cd08cfff17024c10216d0c583badbd33ed32494c7f0000000000000000000000000000000000000000000000000000000000000000600154600354610667919061214c565b60405161067592919061231b565b60405180910390a17f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc6002546003546106c7919061220e565b9081150290604051600060405180830381858888f193505050501580156106f2573d6000803e3d6000fd5b507fbb1d109694da1f57c795e648cd08cfff17024c10216d0c583badbd33ed32494c7f0000000000000000000000000000000000000000000000000000000000000000600254600354610745919061220e565b60405161075392919061231b565b60405180910390a16002600960016101000a81548160ff0219169083600281111561078157610780611d6a565b5b02179055507ff2baea2668e36a27a898b8c745decb4439ff61ae04d545dcc6954b84bd3e3c427f00000000000000000000000000000000000000000000000000000000000000006040516107d5919061235d565b60405180910390a1610954565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc60015460025461082c919061214c565b9081150290604051600060405180830381858888f19350505050158015610857573d6000803e3d6000fd5b507fbb1d109694da1f57c795e648cd08cfff17024c10216d0c583badbd33ed32494c7f00000000000000000000000000000000000000000000000000000000000000006001546002546108aa919061214c565b6040516108b892919061231b565b60405180910390a16001600960016101000a81548160ff021916908360028111156108e6576108e5611d6a565b5b02179055507f0e94573b1be2e52f56af2fa73f97395af190b00bf516b0e90356c3619c4cdf7c7f000000000000000000000000000000000000000000000000000000000000000060025460035461093d919061220e565b60405161094b929190612378565b60405180910390a15b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e42f70b87f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b81526004016109cd91906123a1565b600060405180830381600087803b1580156109e757600080fd5b505af11580156109fb573d6000803e3d6000fd5b50505050610b8e565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc600154600254610a4e919061214c565b9081150290604051600060405180830381858888f19350505050158015610a79573d6000803e3d6000fd5b507fbb1d109694da1f57c795e648cd08cfff17024c10216d0c583badbd33ed32494c7f0000000000000000000000000000000000000000000000000000000000000000600154600254610acc919061214c565b604051610ada92919061231b565b60405180910390a160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638b0a37817f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b8152600401610b5b91906123a1565b600060405180830381600087803b158015610b7557600080fd5b505af1158015610b89573d6000803e3d6000fd5b505050505b6003600960006101000a81548160ff02191690836004811115610bb457610bb3611d6a565b5b021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632822dd1b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610c2157600080fd5b505af1158015610c35573d6000803e3d6000fd5b505050507f572a2b6ee4b829f7c9a4b27bd7729666696a0b5e394e1a9ad92e925e483f02c27f0000000000000000000000000000000000000000000000000000000000000000604051610c88919061235d565b60405180910390a15050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d22576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1990612091565b60405180910390fd5b600154803414610d67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5e90612408565b60405180910390fd5b6000806004811115610d7c57610d7b611d6a565b5b600960009054906101000a900460ff166004811115610d9e57610d9d611d6a565b5b14610dde576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd5906120fd565b60405180910390fd5b600154600254610dee919061214c565b80471015610e31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e28906121ee565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663223668446040518163ffffffff1660e01b815260040160206040518083038186803b158015610e9757600080fd5b505afa158015610eab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ecf9190612454565b610f0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f05906124cd565b60405180910390fd5b426006819055506002600960006101000a81548160ff02191690836004811115610f3b57610f3a611d6a565b5b02179055507fce708d6b67215419755514077f148edc2ee99fe51d758948ee62feea825d70387f0000000000000000000000000000000000000000000000000000000000000000604051610f8f919061235d565b60405180910390a1505050565b6000603c600754610fad919061214c565b6008541115905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611045576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103c9061255f565b60405180910390fd5b600280600481111561105a57611059611d6a565b5b600960009054906101000a900460ff16600481111561107c5761107b611d6a565b5b146110bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b3906120fd565b60405180910390fd5b6001546002546110cc919061214c565b8047101561110f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611106906121ee565b60405180910390fd5b60045460065461111f919061214c565b4211611160576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611157906125cb565b60405180910390fd5b6004600960006101000a81548160ff0219169083600481111561118657611185611d6a565b5b02179055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc6001546002546111d5919061214c565b9081150290604051600060405180830381858888f19350505050158015611200573d6000803e3d6000fd5b507fbb1d109694da1f57c795e648cd08cfff17024c10216d0c583badbd33ed32494c7f0000000000000000000000000000000000000000000000000000000000000000600154600254611253919061214c565b60405161126192919061231b565b60405180910390a160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632822dd1b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156112d157600080fd5b505af11580156112e5573d6000803e3d6000fd5b505050507fa07d0b7132fa6b208a063af8026a29c1fa7ea1f98ffc9682615585318a6b25d67f0000000000000000000000000000000000000000000000000000000000000000604051611338919061235d565b60405180910390a15050565b6000600454600654611356919061214c565b6008541115905090565b6000600154905090565b6000600654905090565b6000600354905090565b6000600960019054906101000a900460ff16905090565b80600a90805190602001906113ab929190611a5e565b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461143d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114349061255f565b60405180910390fd5b600380600481111561145257611451611d6a565b5b600960009054906101000a900460ff16600481111561147457611473611d6a565b5b146114b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ab906120fd565b60405180910390fd5b60018060028111156114c9576114c8611d6a565b5b600960019054906101000a900460ff1660028111156114eb576114ea611d6a565b5b1461152b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152290612637565b60405180910390fd5b60025460035461153b919061220e565b80341461157d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161157490612408565b60405180910390fd5b6001600281111561159157611590611d6a565b5b600960019054906101000a900460ff1660028111156115b3576115b2611d6a565b5b146115f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ea906126a3565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015611659573d6000803e3d6000fd5b507fbb1d109694da1f57c795e648cd08cfff17024c10216d0c583badbd33ed32494c7f00000000000000000000000000000000000000000000000000000000000000006002546003546116ac919061220e565b6040516116ba92919061231b565b60405180910390a16002600960016101000a81548160ff021916908360028111156116e8576116e7611d6a565b5b02179055507ff2baea2668e36a27a898b8c745decb4439ff61ae04d545dcc6954b84bd3e3c427f000000000000000000000000000000000000000000000000000000000000000060405161173c919061235d565b60405180910390a1505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146117d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117ce9061255f565b60405180910390fd5b60008060048111156117ec576117eb611d6a565b5b600960009054906101000a900460ff16600481111561180e5761180d611d6a565b5b1461184e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611845906120fd565b60405180910390fd5b60025480471015611894576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161188b906121ee565b60405180910390fd5b6001600960006101000a81548160ff021916908360048111156118ba576118b9611d6a565b5b02179055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc6002549081150290604051600060405180830381858888f19350505050158015611927573d6000803e3d6000fd5b507fbb1d109694da1f57c795e648cd08cfff17024c10216d0c583badbd33ed32494c7f000000000000000000000000000000000000000000000000000000000000000060025460405161197b92919061231b565b60405180910390a160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632822dd1b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156119eb57600080fd5b505af11580156119ff573d6000803e3d6000fd5b505050507fe1e1d79b8f28d3379fc32f617eaf54dd6bd4071074c77e91134770e04a81d6267f0000000000000000000000000000000000000000000000000000000000000000604051611a52919061235d565b60405180910390a15050565b828054611a6a90611f37565b90600052602060002090601f016020900481019282611a8c5760008555611ad3565b82601f10611aa557805160ff1916838001178555611ad3565b82800160010185558215611ad3579182015b82811115611ad2578251825591602001919060010190611ab7565b5b509050611ae09190611ae4565b5090565b5b80821115611afd576000816000905550600101611ae5565b5090565b600082825260208201905092915050565b7f6261642063616c6c000000000000000000000000000000000000000000000000600082015250565b6000611b48600883611b01565b9150611b5382611b12565b602082019050919050565b60006020820190508181036000830152611b7781611b3b565b9050919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611be582611b9c565b810181811067ffffffffffffffff82111715611c0457611c03611bad565b5b80604052505050565b6000611c17611b7e565b9050611c238282611bdc565b919050565b600067ffffffffffffffff821115611c4357611c42611bad565b5b611c4c82611b9c565b9050602081019050919050565b82818337600083830152505050565b6000611c7b611c7684611c28565b611c0d565b905082815260208101848484011115611c9757611c96611b97565b5b611ca2848285611c59565b509392505050565b600082601f830112611cbf57611cbe611b92565b5b8135611ccf848260208601611c68565b91505092915050565b6000819050919050565b611ceb81611cd8565b8114611cf657600080fd5b50565b600081359050611d0881611ce2565b92915050565b60008060408385031215611d2557611d24611b88565b5b600083013567ffffffffffffffff811115611d4357611d42611b8d565b5b611d4f85828601611caa565b9250506020611d6085828601611cf9565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60058110611daa57611da9611d6a565b5b50565b6000819050611dbb82611d99565b919050565b6000611dcb82611dad565b9050919050565b611ddb81611dc0565b82525050565b6000602082019050611df66000830184611dd2565b92915050565b60008115159050919050565b611e1181611dfc565b82525050565b6000602082019050611e2c6000830184611e08565b92915050565b611e3b81611cd8565b82525050565b6000602082019050611e566000830184611e32565b92915050565b60038110611e6d57611e6c611d6a565b5b50565b6000819050611e7e82611e5c565b919050565b6000611e8e82611e70565b9050919050565b611e9e81611e83565b82525050565b6000602082019050611eb96000830184611e95565b92915050565b600060208284031215611ed557611ed4611b88565b5b600082013567ffffffffffffffff811115611ef357611ef2611b8d565b5b611eff84828501611caa565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611f4f57607f821691505b60208210811415611f6357611f62611f08565b5b50919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154611f9681611f37565b611fa08186611f69565b94506001821660008114611fbb5760018114611fcc57611fff565b60ff19831686528186019350611fff565b611fd585611f74565b60005b83811015611ff757815481890152600182019150602081019050611fd8565b838801955050505b50505092915050565b60006120148284611f89565b915081905092915050565b7f4d6574686f642063616e2062652063616c6c6564206f6e6c792062792070726f60008201527f76696465722e0000000000000000000000000000000000000000000000000000602082015250565b600061207b602683611b01565b91506120868261201f565b604082019050919050565b600060208201905081810360008301526120aa8161206e565b9050919050565b7f496e76616c6964205461736b53746174652e0000000000000000000000000000600082015250565b60006120e7601283611b01565b91506120f2826120b1565b602082019050919050565b60006020820190508181036000830152612116816120da565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061215782611cd8565b915061216283611cd8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156121975761219661211d565b5b828201905092915050565b7f4e6f7420656e6f7567682062616c616e63650000000000000000000000000000600082015250565b60006121d8601283611b01565b91506121e3826121a2565b602082019050919050565b60006020820190508181036000830152612207816121cb565b9050919050565b600061221982611cd8565b915061222483611cd8565b9250828210156122375761223661211d565b5b828203905092915050565b600061224d82611cd8565b915061225883611cd8565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156122915761229061211d565b5b828202905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006122e16122dc6122d78461229c565b6122bc565b61229c565b9050919050565b60006122f3826122c6565b9050919050565b6000612305826122e8565b9050919050565b612315816122fa565b82525050565b6000604082019050612330600083018561230c565b61233d6020830184611e32565b9392505050565b6000819050919050565b61235781612344565b82525050565b6000602082019050612372600083018461234e565b92915050565b600060408201905061238d600083018561234e565b61239a6020830184611e32565b9392505050565b60006020820190506123b6600083018461230c565b92915050565b7f56616c75652073656e74206973206e6f74207468652065787065637465640000600082015250565b60006123f2601e83611b01565b91506123fd826123bc565b602082019050919050565b60006020820190508181036000830152612421816123e5565b9050919050565b61243181611dfc565b811461243c57600080fd5b50565b60008151905061244e81612428565b92915050565b60006020828403121561246a57612469611b88565b5b60006124788482850161243f565b91505092915050565b7f5461736b206d7573742062652072656769737465726564000000000000000000600082015250565b60006124b7601783611b01565b91506124c282612481565b602082019050919050565b600060208201905081810360008301526124e6816124aa565b9050919050565b7f4d6574686f642063616e2062652063616c6c6564206f6e6c7920627920636c6960008201527f656e742e00000000000000000000000000000000000000000000000000000000602082015250565b6000612549602483611b01565b9150612554826124ed565b604082019050919050565b600060208201905081810360008301526125788161253c565b9050919050565b7f54696d6520686173206e6f7420657870697265642e0000000000000000000000600082015250565b60006125b5601583611b01565b91506125c08261257f565b602082019050919050565b600060208201905081810360008301526125e4816125a8565b9050919050565b7f496e76616c6964205061796d656e7453746174652e0000000000000000000000600082015250565b6000612621601583611b01565b915061262c826125eb565b602082019050919050565b6000602082019050818103600083015261265081612614565b9050919050565b7f5061796d656e74206e6f74206e65656465640000000000000000000000000000600082015250565b600061268d601283611b01565b915061269882612657565b602082019050919050565b600060208201905081810360008301526126bc81612680565b905091905056fea2646970667358221220e597415ab70a147f7f17a6a18925aa57bcdb81897c56b8c97f8daf52cd34891c64736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100ec5760003560e01c806371563d101161008a578063da632a1111610059578063da632a11146102bf578063e403f1a7146102ea578063e8fda67714610313578063f7d9ae731461031d5761012c565b806371563d101461021357806392df4b701461023e578063adaa139914610269578063bb328a7d146102945761012c565b806343bb8db5116100c657806343bb8db5146101b05780635a90bbfc146101c757806363d22bb3146101d15780636c77d7ef146101fc5761012c565b8063042e58c8146101315780630b42330c1461015a5780631798b0f3146101855761012c565b3661012c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012390611b5e565b60405180910390fd5b600080fd5b34801561013d57600080fd5b5061015860048036038101906101539190611d0e565b610334565b005b34801561016657600080fd5b5061016f61035d565b60405161017c9190611de1565b60405180910390f35b34801561019157600080fd5b5061019a610374565b6040516101a79190611e17565b60405180910390f35b3480156101bc57600080fd5b506101c56103c5565b005b6101cf610c94565b005b3480156101dd57600080fd5b506101e6610f9c565b6040516101f39190611e17565b60405180910390f35b34801561020857600080fd5b50610211610fb7565b005b34801561021f57600080fd5b50610228611344565b6040516102359190611e17565b60405180910390f35b34801561024a57600080fd5b50610253611360565b6040516102609190611e41565b60405180910390f35b34801561027557600080fd5b5061027e61136a565b60405161028b9190611e41565b60405180910390f35b3480156102a057600080fd5b506102a9611374565b6040516102b69190611e41565b60405180910390f35b3480156102cb57600080fd5b506102d461137e565b6040516102e19190611ea4565b60405180910390f35b3480156102f657600080fd5b50610311600480360381019061030c9190611ebf565b611395565b005b61031b6113af565b005b34801561032957600080fd5b50610332611749565b005b81600b908051906020019061034a929190611a5e565b5042600881905550806007819055505050565b6000600960009054906101000a900460ff16905090565b6000600b6040516020016103889190612008565b604051602081830303815290604052805190602001207f000000000000000000000000000000000000000000000000000000000000000014905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610453576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044a90612091565b60405180910390fd5b600280600481111561046857610467611d6a565b5b600960009054906101000a900460ff16600481111561048a57610489611d6a565b5b146104ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c1906120fd565b60405180910390fd5b6001546002546104da919061214c565b8047101561051d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610514906121ee565b60405180910390fd5b610525611344565b80156105355750610534610f9c565b5b80156105455750610544610374565b5b15610a045760065460075461055a919061220e565b6005819055506005547f000000000000000000000000000000000000000000000000000000000000000061058e9190612242565b600381905550600254600354116107e2577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc6001546003546105e9919061214c565b9081150290604051600060405180830381858888f19350505050158015610614573d6000803e3d6000fd5b507fbb1d109694da1f57c795e648cd08cfff17024c10216d0c583badbd33ed32494c7f0000000000000000000000000000000000000000000000000000000000000000600154600354610667919061214c565b60405161067592919061231b565b60405180910390a17f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc6002546003546106c7919061220e565b9081150290604051600060405180830381858888f193505050501580156106f2573d6000803e3d6000fd5b507fbb1d109694da1f57c795e648cd08cfff17024c10216d0c583badbd33ed32494c7f0000000000000000000000000000000000000000000000000000000000000000600254600354610745919061220e565b60405161075392919061231b565b60405180910390a16002600960016101000a81548160ff0219169083600281111561078157610780611d6a565b5b02179055507ff2baea2668e36a27a898b8c745decb4439ff61ae04d545dcc6954b84bd3e3c427f00000000000000000000000000000000000000000000000000000000000000006040516107d5919061235d565b60405180910390a1610954565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc60015460025461082c919061214c565b9081150290604051600060405180830381858888f19350505050158015610857573d6000803e3d6000fd5b507fbb1d109694da1f57c795e648cd08cfff17024c10216d0c583badbd33ed32494c7f00000000000000000000000000000000000000000000000000000000000000006001546002546108aa919061214c565b6040516108b892919061231b565b60405180910390a16001600960016101000a81548160ff021916908360028111156108e6576108e5611d6a565b5b02179055507f0e94573b1be2e52f56af2fa73f97395af190b00bf516b0e90356c3619c4cdf7c7f000000000000000000000000000000000000000000000000000000000000000060025460035461093d919061220e565b60405161094b929190612378565b60405180910390a15b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e42f70b87f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b81526004016109cd91906123a1565b600060405180830381600087803b1580156109e757600080fd5b505af11580156109fb573d6000803e3d6000fd5b50505050610b8e565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc600154600254610a4e919061214c565b9081150290604051600060405180830381858888f19350505050158015610a79573d6000803e3d6000fd5b507fbb1d109694da1f57c795e648cd08cfff17024c10216d0c583badbd33ed32494c7f0000000000000000000000000000000000000000000000000000000000000000600154600254610acc919061214c565b604051610ada92919061231b565b60405180910390a160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638b0a37817f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b8152600401610b5b91906123a1565b600060405180830381600087803b158015610b7557600080fd5b505af1158015610b89573d6000803e3d6000fd5b505050505b6003600960006101000a81548160ff02191690836004811115610bb457610bb3611d6a565b5b021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632822dd1b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610c2157600080fd5b505af1158015610c35573d6000803e3d6000fd5b505050507f572a2b6ee4b829f7c9a4b27bd7729666696a0b5e394e1a9ad92e925e483f02c27f0000000000000000000000000000000000000000000000000000000000000000604051610c88919061235d565b60405180910390a15050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d22576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1990612091565b60405180910390fd5b600154803414610d67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5e90612408565b60405180910390fd5b6000806004811115610d7c57610d7b611d6a565b5b600960009054906101000a900460ff166004811115610d9e57610d9d611d6a565b5b14610dde576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd5906120fd565b60405180910390fd5b600154600254610dee919061214c565b80471015610e31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e28906121ee565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663223668446040518163ffffffff1660e01b815260040160206040518083038186803b158015610e9757600080fd5b505afa158015610eab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ecf9190612454565b610f0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f05906124cd565b60405180910390fd5b426006819055506002600960006101000a81548160ff02191690836004811115610f3b57610f3a611d6a565b5b02179055507fce708d6b67215419755514077f148edc2ee99fe51d758948ee62feea825d70387f0000000000000000000000000000000000000000000000000000000000000000604051610f8f919061235d565b60405180910390a1505050565b6000603c600754610fad919061214c565b6008541115905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611045576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103c9061255f565b60405180910390fd5b600280600481111561105a57611059611d6a565b5b600960009054906101000a900460ff16600481111561107c5761107b611d6a565b5b146110bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b3906120fd565b60405180910390fd5b6001546002546110cc919061214c565b8047101561110f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611106906121ee565b60405180910390fd5b60045460065461111f919061214c565b4211611160576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611157906125cb565b60405180910390fd5b6004600960006101000a81548160ff0219169083600481111561118657611185611d6a565b5b02179055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc6001546002546111d5919061214c565b9081150290604051600060405180830381858888f19350505050158015611200573d6000803e3d6000fd5b507fbb1d109694da1f57c795e648cd08cfff17024c10216d0c583badbd33ed32494c7f0000000000000000000000000000000000000000000000000000000000000000600154600254611253919061214c565b60405161126192919061231b565b60405180910390a160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632822dd1b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156112d157600080fd5b505af11580156112e5573d6000803e3d6000fd5b505050507fa07d0b7132fa6b208a063af8026a29c1fa7ea1f98ffc9682615585318a6b25d67f0000000000000000000000000000000000000000000000000000000000000000604051611338919061235d565b60405180910390a15050565b6000600454600654611356919061214c565b6008541115905090565b6000600154905090565b6000600654905090565b6000600354905090565b6000600960019054906101000a900460ff16905090565b80600a90805190602001906113ab929190611a5e565b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461143d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114349061255f565b60405180910390fd5b600380600481111561145257611451611d6a565b5b600960009054906101000a900460ff16600481111561147457611473611d6a565b5b146114b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ab906120fd565b60405180910390fd5b60018060028111156114c9576114c8611d6a565b5b600960019054906101000a900460ff1660028111156114eb576114ea611d6a565b5b1461152b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152290612637565b60405180910390fd5b60025460035461153b919061220e565b80341461157d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161157490612408565b60405180910390fd5b6001600281111561159157611590611d6a565b5b600960019054906101000a900460ff1660028111156115b3576115b2611d6a565b5b146115f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ea906126a3565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015611659573d6000803e3d6000fd5b507fbb1d109694da1f57c795e648cd08cfff17024c10216d0c583badbd33ed32494c7f00000000000000000000000000000000000000000000000000000000000000006002546003546116ac919061220e565b6040516116ba92919061231b565b60405180910390a16002600960016101000a81548160ff021916908360028111156116e8576116e7611d6a565b5b02179055507ff2baea2668e36a27a898b8c745decb4439ff61ae04d545dcc6954b84bd3e3c427f000000000000000000000000000000000000000000000000000000000000000060405161173c919061235d565b60405180910390a1505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146117d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117ce9061255f565b60405180910390fd5b60008060048111156117ec576117eb611d6a565b5b600960009054906101000a900460ff16600481111561180e5761180d611d6a565b5b1461184e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611845906120fd565b60405180910390fd5b60025480471015611894576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161188b906121ee565b60405180910390fd5b6001600960006101000a81548160ff021916908360048111156118ba576118b9611d6a565b5b02179055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc6002549081150290604051600060405180830381858888f19350505050158015611927573d6000803e3d6000fd5b507fbb1d109694da1f57c795e648cd08cfff17024c10216d0c583badbd33ed32494c7f000000000000000000000000000000000000000000000000000000000000000060025460405161197b92919061231b565b60405180910390a160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632822dd1b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156119eb57600080fd5b505af11580156119ff573d6000803e3d6000fd5b505050507fe1e1d79b8f28d3379fc32f617eaf54dd6bd4071074c77e91134770e04a81d6267f0000000000000000000000000000000000000000000000000000000000000000604051611a52919061235d565b60405180910390a15050565b828054611a6a90611f37565b90600052602060002090601f016020900481019282611a8c5760008555611ad3565b82601f10611aa557805160ff1916838001178555611ad3565b82800160010185558215611ad3579182015b82811115611ad2578251825591602001919060010190611ab7565b5b509050611ae09190611ae4565b5090565b5b80821115611afd576000816000905550600101611ae5565b5090565b600082825260208201905092915050565b7f6261642063616c6c000000000000000000000000000000000000000000000000600082015250565b6000611b48600883611b01565b9150611b5382611b12565b602082019050919050565b60006020820190508181036000830152611b7781611b3b565b9050919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611be582611b9c565b810181811067ffffffffffffffff82111715611c0457611c03611bad565b5b80604052505050565b6000611c17611b7e565b9050611c238282611bdc565b919050565b600067ffffffffffffffff821115611c4357611c42611bad565b5b611c4c82611b9c565b9050602081019050919050565b82818337600083830152505050565b6000611c7b611c7684611c28565b611c0d565b905082815260208101848484011115611c9757611c96611b97565b5b611ca2848285611c59565b509392505050565b600082601f830112611cbf57611cbe611b92565b5b8135611ccf848260208601611c68565b91505092915050565b6000819050919050565b611ceb81611cd8565b8114611cf657600080fd5b50565b600081359050611d0881611ce2565b92915050565b60008060408385031215611d2557611d24611b88565b5b600083013567ffffffffffffffff811115611d4357611d42611b8d565b5b611d4f85828601611caa565b9250506020611d6085828601611cf9565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60058110611daa57611da9611d6a565b5b50565b6000819050611dbb82611d99565b919050565b6000611dcb82611dad565b9050919050565b611ddb81611dc0565b82525050565b6000602082019050611df66000830184611dd2565b92915050565b60008115159050919050565b611e1181611dfc565b82525050565b6000602082019050611e2c6000830184611e08565b92915050565b611e3b81611cd8565b82525050565b6000602082019050611e566000830184611e32565b92915050565b60038110611e6d57611e6c611d6a565b5b50565b6000819050611e7e82611e5c565b919050565b6000611e8e82611e70565b9050919050565b611e9e81611e83565b82525050565b6000602082019050611eb96000830184611e95565b92915050565b600060208284031215611ed557611ed4611b88565b5b600082013567ffffffffffffffff811115611ef357611ef2611b8d565b5b611eff84828501611caa565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611f4f57607f821691505b60208210811415611f6357611f62611f08565b5b50919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154611f9681611f37565b611fa08186611f69565b94506001821660008114611fbb5760018114611fcc57611fff565b60ff19831686528186019350611fff565b611fd585611f74565b60005b83811015611ff757815481890152600182019150602081019050611fd8565b838801955050505b50505092915050565b60006120148284611f89565b915081905092915050565b7f4d6574686f642063616e2062652063616c6c6564206f6e6c792062792070726f60008201527f76696465722e0000000000000000000000000000000000000000000000000000602082015250565b600061207b602683611b01565b91506120868261201f565b604082019050919050565b600060208201905081810360008301526120aa8161206e565b9050919050565b7f496e76616c6964205461736b53746174652e0000000000000000000000000000600082015250565b60006120e7601283611b01565b91506120f2826120b1565b602082019050919050565b60006020820190508181036000830152612116816120da565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061215782611cd8565b915061216283611cd8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156121975761219661211d565b5b828201905092915050565b7f4e6f7420656e6f7567682062616c616e63650000000000000000000000000000600082015250565b60006121d8601283611b01565b91506121e3826121a2565b602082019050919050565b60006020820190508181036000830152612207816121cb565b9050919050565b600061221982611cd8565b915061222483611cd8565b9250828210156122375761223661211d565b5b828203905092915050565b600061224d82611cd8565b915061225883611cd8565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156122915761229061211d565b5b828202905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006122e16122dc6122d78461229c565b6122bc565b61229c565b9050919050565b60006122f3826122c6565b9050919050565b6000612305826122e8565b9050919050565b612315816122fa565b82525050565b6000604082019050612330600083018561230c565b61233d6020830184611e32565b9392505050565b6000819050919050565b61235781612344565b82525050565b6000602082019050612372600083018461234e565b92915050565b600060408201905061238d600083018561234e565b61239a6020830184611e32565b9392505050565b60006020820190506123b6600083018461230c565b92915050565b7f56616c75652073656e74206973206e6f74207468652065787065637465640000600082015250565b60006123f2601e83611b01565b91506123fd826123bc565b602082019050919050565b60006020820190508181036000830152612421816123e5565b9050919050565b61243181611dfc565b811461243c57600080fd5b50565b60008151905061244e81612428565b92915050565b60006020828403121561246a57612469611b88565b5b60006124788482850161243f565b91505092915050565b7f5461736b206d7573742062652072656769737465726564000000000000000000600082015250565b60006124b7601783611b01565b91506124c282612481565b602082019050919050565b600060208201905081810360008301526124e6816124aa565b9050919050565b7f4d6574686f642063616e2062652063616c6c6564206f6e6c7920627920636c6960008201527f656e742e00000000000000000000000000000000000000000000000000000000602082015250565b6000612549602483611b01565b9150612554826124ed565b604082019050919050565b600060208201905081810360008301526125788161253c565b9050919050565b7f54696d6520686173206e6f7420657870697265642e0000000000000000000000600082015250565b60006125b5601583611b01565b91506125c08261257f565b602082019050919050565b600060208201905081810360008301526125e4816125a8565b9050919050565b7f496e76616c6964205061796d656e7453746174652e0000000000000000000000600082015250565b6000612621601583611b01565b915061262c826125eb565b602082019050919050565b6000602082019050818103600083015261265081612614565b9050919050565b7f5061796d656e74206e6f74206e65656465640000000000000000000000000000600082015250565b600061268d601283611b01565b915061269882612657565b602082019050919050565b600060208201905081810360008301526126bc81612680565b905091905056fea2646970667358221220e597415ab70a147f7f17a6a18925aa57bcdb81897c56b8c97f8daf52cd34891c64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "invalidateTask()": {
        "notice": "TaskState -> Invalid"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 242,
        "contract": "contracts/Task.sol:Task",
        "label": "registry",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(Registry)220"
      },
      {
        "astId": 246,
        "contract": "contracts/Task.sol:Task",
        "label": "providerCollateral",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 248,
        "contract": "contracts/Task.sol:Task",
        "label": "clientCollateral",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 250,
        "contract": "contracts/Task.sol:Task",
        "label": "payment",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 252,
        "contract": "contracts/Task.sol:Task",
        "label": "deadline",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 254,
        "contract": "contracts/Task.sol:Task",
        "label": "duration",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 256,
        "contract": "contracts/Task.sol:Task",
        "label": "activationTime",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 258,
        "contract": "contracts/Task.sol:Task",
        "label": "timeResultProvided",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 260,
        "contract": "contracts/Task.sol:Task",
        "label": "timeResultReceived",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 263,
        "contract": "contracts/Task.sol:Task",
        "label": "taskState",
        "offset": 0,
        "slot": "9",
        "type": "t_enum(TaskState)229"
      },
      {
        "astId": 266,
        "contract": "contracts/Task.sol:Task",
        "label": "paymentState",
        "offset": 1,
        "slot": "9",
        "type": "t_enum(PaymentState)233"
      },
      {
        "astId": 268,
        "contract": "contracts/Task.sol:Task",
        "label": "code",
        "offset": 0,
        "slot": "10",
        "type": "t_string_storage"
      },
      {
        "astId": 272,
        "contract": "contracts/Task.sol:Task",
        "label": "providerVerification",
        "offset": 0,
        "slot": "11",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_contract(Registry)220": {
        "encoding": "inplace",
        "label": "contract Registry",
        "numberOfBytes": "20"
      },
      "t_enum(PaymentState)233": {
        "encoding": "inplace",
        "label": "enum Task.PaymentState",
        "numberOfBytes": "1"
      },
      "t_enum(TaskState)229": {
        "encoding": "inplace",
        "label": "enum Task.TaskState",
        "numberOfBytes": "1"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}